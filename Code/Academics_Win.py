# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Academics_Win.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Academics_Win.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from Admissions_Win import Ui_Admissions_Win
from Curriculum_Win import Ui_Dialog
from Classes_Win import Ui_Classes
from pta_Win import Ui_PTA_C


class Ui_Academics(object):
    def setupUi(self, Academics):

        buttonFontsize=12
        Academics.setObjectName("Academics")
        Academics.resize(649, 522)
        Academics.setWindowIcon(QtGui.QIcon('Icons/academics_Win_icon.png')) # Attribution: <a href="https://www.flaticon.com/free-icons/school" title="school icons">School icons created by Freepik - Flaticon</a>
        self.centralwidget = QtWidgets.QWidget(Academics)
        self.centralwidget.setObjectName("centralwidget")
        self.Academics_Label = QtWidgets.QLabel(self.centralwidget)
        self.Academics_Label.setGeometry(QtCore.QRect(170, 10, 281, 51))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(20)
        self.Academics_Label.setFont(font)
        self.Academics_Label.setAutoFillBackground(False)
        self.Academics_Label.setScaledContents(True)
        self.Academics_Label.setAlignment(QtCore.Qt.AlignCenter)
        self.Academics_Label.setWordWrap(True)
        self.Academics_Label.setObjectName("Academics_Label")
        self.Classes = QtWidgets.QPushButton(self.centralwidget)
        self.Classes.setGeometry(QtCore.QRect(40, 340, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(buttonFontsize)
        self.Classes.setFont(font)
        self.Classes.setObjectName("Classes")
        self.Classes.setText("Classes")
        self.Classes.clicked.connect(lambda: self.userButtonresponse('Classes'))
        self.Admissions = QtWidgets.QPushButton(self.centralwidget)
        self.Admissions.setGeometry(QtCore.QRect(40, 180, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(buttonFontsize)
        self.Admissions.setFont(font)
        self.Admissions.setObjectName("Admissions")
        self.Admissions.setText("Admissions")
        self.Admissions.clicked.connect(lambda: self.userButtonresponse('Admissions'))
        Academics.setCentralWidget(self.centralwidget)
        self.Curriculum = QtWidgets.QPushButton(self.centralwidget)
        self.Curriculum.setGeometry(QtCore.QRect(400, 340, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(buttonFontsize)
        self.Curriculum.setFont(font)
        self.Curriculum.setObjectName("Curriculum")
        self.Curriculum.setText("Curriculum")
        self.Curriculum.clicked.connect(lambda: self.userButtonresponse('Curriculum'))
        self.circulars = QtWidgets.QPushButton(self.centralwidget)
        self.circulars.setGeometry(QtCore.QRect(400, 180, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(buttonFontsize)
        self.circulars.setFont(font)
        self.circulars.setObjectName("openHouse")

        self.circulars.clicked.connect(lambda: self.userButtonresponse('circulars'))
        self.statusbar = QtWidgets.QStatusBar(Academics)
        self.statusbar.setObjectName("statusbar")
        Academics.setStatusBar(self.statusbar)

        self.retranslateUi(Academics)
        QtCore.QMetaObject.connectSlotsByName(Academics)

    def retranslateUi(self, Academics):
        _translate = QtCore.QCoreApplication.translate
        Academics.setWindowTitle(_translate("Academics", "Academics Information"))
        self.Academics_Label.setText(_translate("Academics", "Academics"))
        self.Classes.setText(_translate("Academics", "Classes"))
        self.Admissions.setText(_translate("Academics", "Admissions"))
        self.circulars.setText(_translate("Academics", "Circulars/PTA"))

    def userButtonresponse(self, button):
        """
        This function prints which button(s) user has clicked and executes
        the necessary functions as required

        :param button:
        :return:
        """
        if button == 'Admissions':
            print('Admissions Pressed')
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_Admissions_Win()
            self.ui.setupUi(self.window)
            self.window.show()
            print("Admissions Window Opened")
        elif button == 'Classes':
            print('Classes Pressed')
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_Classes()
            self.ui.setupUi(self.window)
            self.window.show()
        elif button == 'Curriculum':
            print('Curriculum pressed')
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_Dialog()
            self.ui.setupUi(self.window)
            self.window.show()
            print("Curriculum and Book List Window Opened")

        elif button == 'circulars':
            print('Circulars pressed')
            print('Curriculum pressed')
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_PTA_C()
            self.ui.setupUi(self.window)
            self.window.show()
        else:
            pass




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Academics = QtWidgets.QMainWindow()
    ui = Ui_Academics()
    ui.setupUi(Academics)
    Academics.show()
    sys.exit(app.exec_())
