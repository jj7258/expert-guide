# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Curriculum_Win.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtWebEngineWidgets
import Curriculum



class Ui_Curriculum_Win(object):
    def setupUi(self, Curriculum_Win):
        Curriculum_Win.setObjectName("Curriculum_Win")
        Curriculum_Win.resize(1600, 820)
        Curriculum_Win.setStyleSheet("background-image: url(:/Background/QRC/magicpattern-gradient-1690353787077.jpeg);")
        self.gridLayout = QtWidgets.QGridLayout(Curriculum_Win)
        self.gridLayout.setContentsMargins(-1, -1, -1, 10)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.curriculumButton = QtWidgets.QPushButton(Curriculum_Win)
        self.curriculumButton.setMinimumSize(QtCore.QSize(0, 75))
        self.curriculumButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Icons/QRC/Curriculum.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.curriculumButton.setIcon(icon)
        self.curriculumButton.setIconSize(QtCore.QSize(27, 27))
        self.curriculumButton.setObjectName("curriculumButton")
        self.curriculumButton.clicked.connect(lambda: self.userButtonresponse('Curriculum'))
        self.verticalLayout_2.addWidget(self.curriculumButton)
        self.bookList = QtWidgets.QPushButton(Curriculum_Win)
        self.bookList.setMinimumSize(QtCore.QSize(0, 75))
        self.bookList.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Icons/QRC/bookList.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bookList.setIcon(icon1)
        self.bookList.setIconSize(QtCore.QSize(30, 30))
        self.bookList.setObjectName("bookList")
        self.bookList.clicked.connect(lambda: self.userButtonresponse('BookList'))
        self.verticalLayout_2.addWidget(self.bookList)
        self.backButton = QtWidgets.QPushButton(Curriculum_Win)
        self.backButton.setMinimumSize(QtCore.QSize(0, 75))
        self.backButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Icons/QRC/leftWhite.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.backButton.setIcon(icon2)
        self.backButton.setIconSize(QtCore.QSize(25, 25))
        self.backButton.setObjectName("backButton")
        self.backButton.clicked.connect(lambda: self.userButtonresponse('Back'))
        self.backButton.clicked.connect(Curriculum_Win.close)
        self.verticalLayout_2.addWidget(self.backButton)
        self.homeButton = QtWidgets.QPushButton(Curriculum_Win)
        self.homeButton.setMinimumSize(QtCore.QSize(0, 75))
        self.homeButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Icons/QRC/homeIcon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.homeButton.setIcon(icon3)
        self.homeButton.setIconSize(QtCore.QSize(30, 30))
        self.homeButton.setObjectName("homeButton")
        self.homeButton.clicked.connect(lambda: self.userButtonresponse('Home'))
        self.homeButton.clicked.connect(Curriculum_Win.close)
        self.verticalLayout_2.addWidget(self.homeButton)
        self.gridLayout.addLayout(self.verticalLayout_2, 1, 2, 2, 1)
        self.Curriculum_BookList = QtWidgets.QLabel(Curriculum_Win)
        self.Curriculum_BookList.setMinimumSize(QtCore.QSize(0, 100))
        self.Curriculum_BookList.setMaximumSize(QtCore.QSize(16777215, 100))
        self.Curriculum_BookList.setStyleSheet("QLabel\n"
"{\n"
"background: transparent;\n"
"}")
        self.Curriculum_BookList.setAlignment(QtCore.Qt.AlignCenter)
        self.Curriculum_BookList.setObjectName("Curriculum_BookList")
        self.gridLayout.addWidget(self.Curriculum_BookList, 0, 0, 1, 3)
        self.pdfView = QtWebEngineWidgets.QWebEngineView(Curriculum_Win)
        self.pdfView.setMinimumSize(QtCore.QSize(0, 636))
        self.pdfView.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pdfView.setObjectName("pdfView")
        self.pdfView.settings().setAttribute(QtWebEngineWidgets.QWebEngineSettings.PluginsEnabled, True)
        self.pdfView.settings().setAttribute(QtWebEngineWidgets.QWebEngineSettings.JavascriptEnabled, True)
        self.pdfView.settings().setAttribute(QtWebEngineWidgets.QWebEngineSettings.PdfViewerEnabled, True)
        self.gridLayout.addWidget(self.pdfView, 1, 0, 2, 2)

        self.retranslateUi(Curriculum_Win)
        QtCore.QMetaObject.connectSlotsByName(Curriculum_Win)

    def retranslateUi(self, Curriculum_Win):
        _translate = QtCore.QCoreApplication.translate
        Curriculum_Win.setWindowTitle(_translate("Curriculum_Win", "Dialog"))
        self.curriculumButton.setText(_translate("Curriculum_Win", " Curriculum"))
        self.bookList.setText(_translate("Curriculum_Win", " Book List"))
        self.backButton.setText(_translate("Curriculum_Win", "Back"))
        self.homeButton.setText(_translate("Curriculum_Win", " Home"))
        self.Curriculum_BookList.setText(_translate("Curriculum_Win", "<html><head/><body><p align=\"center\"><span style=\" font-size:24pt; font-weight:600; color:#ffffff;\">Curriculum &amp; Book List </span></p></body></html>"))


    def load_pdf(self, file_path):
        """
        This function loads the PDF file into the PDF viewer.
        :param file_path: The file path of the PDF file
        :return: None - This function does not return anything
        """
        self.pdfView.setUrl(QtCore.QUrl.fromLocalFile(file_path))

    def load_curriculum_pdf(self):
        """
        This function loads the curriculum PDF file into the PDF viewer.
        :return: None - This function does not return anything
        """
        file_path = '/PDF/Curriculum/MTCS_Curriculum.pdf'  # Replace with your curriculum PDF file path
        self.load_pdf(file_path)

    def load_book_list_pdf(self):
        """
        This function loads the book list PDF file into the PDF viewer.

        :return: None - This function does not return anything
        """
        file_path = "path_to_book_list_pdf.pdf"  # Replace with your book list PDF file path
        self.load_pdf(file_path)

    def userButtonresponse(self, button):
        """
        This function prints which button(s) user has clicked and executes
        the necessary functions as required by the user.

        :param button: The button that the user has clicked
        :return: None - This function does not return anything
        """
        if button == 'Curriculum':
            print('Curriculum pressed')
            self.load_curriculum_pdf()
        elif button == 'Book List':
            print('Book List pressed')
            self.load_book_list_pdf()
        elif button == 'Back':
            print('Back pressed')
            from Academics_Win import Ui_Academics_Win
            self.window = QtWidgets.QDialog()
            self.ui = Ui_Academics_Win()
            self.ui.setupUi(self.window)
            self.window.show()
        elif button == 'Home':
            print('Home pressed')
            from School_Reception import Ui_MainWindow
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_MainWindow()
            self.ui.setupUi(self.window)
            self.window.show()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Curriculum_Win = QtWidgets.QDialog()
    ui = Ui_Curriculum_Win()
    ui.setupUi(Curriculum_Win)
    Curriculum_Win.show()
    sys.exit(app.exec_())
