# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pta_Win.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtWebEngineWidgets
import ptac

class Ui_PTA_C(object):
    def setupUi(self, PTA_C):
        PTA_C.setObjectName("PTA_C")
        PTA_C.resize(1600, 822)
        PTA_C.setStyleSheet("background-image: url(:/Background/QRC/magicpattern-gradient-1690353787077.jpeg);")
        self.gridLayout = QtWidgets.QGridLayout(PTA_C)
        self.gridLayout.setObjectName("gridLayout")
        self.PTAviewer = QtWebEngineWidgets.QWebEngineView(PTA_C)
        self.PTAviewer.setMinimumSize(QtCore.QSize(1200, 700))
        self.PTAviewer.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.PTAviewer.setUrl(QtCore.QUrl("about:blank"))
        self.PTAviewer.setObjectName("PTAviewer")
        self.PTAviewer.settings().setAttribute(QtWebEngineWidgets.QWebEngineSettings.PdfViewerEnabled, True)
        self.PTAviewer.settings().setAttribute(QtWebEngineWidgets.QWebEngineSettings.JavascriptEnabled, True)

        self.gridLayout.addWidget(self.PTAviewer, 1, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.circularButton = QtWidgets.QPushButton(PTA_C)
        self.circularButton.setMinimumSize(QtCore.QSize(0, 75))
        self.circularButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Icon/QRC/Circular_PTA.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.circularButton.setIcon(icon)
        self.circularButton.setIconSize(QtCore.QSize(30, 30))
        self.circularButton.setObjectName("circularButton")
        self.circularButton.clicked.connect(lambda: self.userButtonResponse('Circular'))
        self.verticalLayout.addWidget(self.circularButton)
        self.ptaButton = QtWidgets.QPushButton(PTA_C)
        self.ptaButton.setMinimumSize(QtCore.QSize(0, 75))
        self.ptaButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Icon/QRC/ptaIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ptaButton.setIcon(icon1)
        self.ptaButton.setIconSize(QtCore.QSize(30, 30))
        self.ptaButton.setObjectName("ptaButton")
        self.ptaButton.clicked.connect(lambda: self.userButtonResponse('PTA'))
        self.verticalLayout.addWidget(self.ptaButton)
        self.backButton = QtWidgets.QPushButton(PTA_C)
        self.backButton.setMinimumSize(QtCore.QSize(0, 75))
        self.backButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Icon/QRC/leftWhite.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.backButton.setIcon(icon2)
        self.backButton.setIconSize(QtCore.QSize(22, 22))
        self.backButton.setObjectName("backButton")
        self.backButton.clicked.connect(lambda: self.userButtonResponse('Back'))
        self.backButton.clicked.connect(PTA_C.close)
        self.verticalLayout.addWidget(self.backButton)
        self.homeButton = QtWidgets.QPushButton(PTA_C)
        self.homeButton.setMinimumSize(QtCore.QSize(0, 75))
        self.homeButton.setStyleSheet("QPushButton{\n"
"background-color: none;\n"
"color:white;\n"
"border-width: 2px;\n"
"font:bold 25px;\n"
"border-radius: 8px;\n"
"padding: 5px;\n"
"border: 2px solid blue;\n"
"border-style: groove;\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"border-color: white;\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"border-style:solid;\n"
"border-width: 2px;\n"
"border-color: rgb(0, 170, 0);\n"
"}")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Icon/QRC/homeIcon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.homeButton.setIcon(icon3)
        self.homeButton.setIconSize(QtCore.QSize(22, 22))
        self.homeButton.setObjectName("homeButton")
        self.homeButton.clicked.connect(lambda: self.userButtonResponse('Home'))
        self.homeButton.clicked.connect(PTA_C.close)
        self.verticalLayout.addWidget(self.homeButton)
        self.gridLayout.addLayout(self.verticalLayout, 1, 1, 1, 1)
        self.circularsPTALabel = QtWidgets.QLabel(PTA_C)
        self.circularsPTALabel.setMinimumSize(QtCore.QSize(0, 0))
        self.circularsPTALabel.setMaximumSize(QtCore.QSize(16777215, 90))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(20)
        self.circularsPTALabel.setFont(font)
        self.circularsPTALabel.setStyleSheet("QLabel\n"
"{\n"
"background: transparent;\n"
"}")
        self.circularsPTALabel.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.circularsPTALabel.setScaledContents(True)
        self.circularsPTALabel.setAlignment(QtCore.Qt.AlignCenter)
        self.circularsPTALabel.setObjectName("circularsPTALabel")
        self.gridLayout.addWidget(self.circularsPTALabel, 0, 0, 1, 2)

        self.retranslateUi(PTA_C)
        QtCore.QMetaObject.connectSlotsByName(PTA_C)

    def retranslateUi(self, PTA_C):
        _translate = QtCore.QCoreApplication.translate
        PTA_C.setWindowTitle(_translate("PTA_C", "Dialog"))
        self.circularButton.setText(_translate("PTA_C", " Circulars"))
        self.ptaButton.setText(_translate("PTA_C", " PTA"))
        self.backButton.setText(_translate("PTA_C", " Back "))
        self.homeButton.setText(_translate("PTA_C", " Home"))
        self.circularsPTALabel.setText(_translate("PTA_C", "<html><head/><body><p align=\"center\"><span style=\" font-size:24pt; font-weight:600; color:#ffffff;\">Circulars and PTA</span></p></body></html>"))

    def userButtonResponse(self,button):
        """
        This function is used to handle the response of the user when he clicks on any button
        :param button:
        :return:
        """
        if button == 'Circular':
            self.PTAviewer.setUrl(QtCore.QUrl("https://docs.google.com/document/d/e/2PACX-1vQos9Lkr5n3mzUE50BMZFRmYIRh5ahYCFZctquw2h7lF9PaqUa8tbMNiqebDZV8FaGdm1JtQylgSiD5/pub"))
        elif button == 'PTA':
            self.PTAviewer.setUrl(QtCore.QUrl("https://docs.google.com/document/d/e/2PACX-1vT-W_ZnaUb0TkHSMi5il58BFGI27NslY9cPzl-BExGL6FmFC42944oQ3PnprNlpFLJCIBEkrd1BqCMo/pub"))
        elif button == 'Back':
            from Academics_Win import Ui_Academics_Win
            self.window = QtWidgets.QDialog()
            self.ui = Ui_Academics_Win()
            self.ui.setupUi(self.window)
            self.window.show()
        elif button == 'Home':
            from School_Reception import Ui_MainWindow
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_MainWindow()
            self.ui.setupUi(self.window)
            self.window.show()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PTA_C = QtWidgets.QDialog()
    ui = Ui_PTA_C()
    ui.setupUi(PTA_C)
    PTA_C.show()
    sys.exit(app.exec_())
